---
kind: Service
apiVersion: v1
metadata:
  name: "mongodb-internal"
  labels:
    name: "mongodb"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  ports:
    - name: mongodb
      port: 27017
  selector:
    name: "mongodb"
---
kind: Service
apiVersion: v1
metadata:
  name: "mongodb"
  labels:
    name: "mongodb"
spec:
  ports:
    - name: mongodb
      port: 27017
  selector:
    name: "mongodb"
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    description: Exposes and load balances the application pods
  name: rocket-chat
spec:
  ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: rocket-chat
---
apiVersion: v1
kind: ImageStream
metadata:
  annotations:
    description: Keeps track of changes in the application image
  name: rocket-chat
spec:
  tags:
  - annotations:
      openshift.io/imported-from: docker.io/rocketchat/rocket.chat:0.63.3
    from:
      kind: DockerImage
      name: docker.io/rocketchat/rocket.chat:0.63.3
    name: 0.63.3
---
apiVersion: v1
kind: Route
metadata:
  name: rocket-chat
spec:
  to:
    kind: Service
    name: rocket-chat
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
  labels:
    app: rocket-chat
  name:  rocket-chat
spec:
  replicas: 1
  selector:
    app: rocket-chat
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app: rocket-chat
    spec:
      containers:
      - env:
        - name: MONGO_URL
          value: mongodb://mongodb_user:mongodb_password@mongodb:27017/mongodb?replicaSet=rs0
        image: ' '
        name:  rocket-chat
        ports:
          - containerPort: 3000
            protocol: TCP
        volumeMounts:
        - mountPath: /app/uploads
          name: rocketchat-volume-1
      volumes:
      - emptyDir: {}
        name: rocketchat-volume-1
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - rocket-chat
      from:
        kind: ImageStreamTag
        name: "rocket-chat:0.63.3"
        namespace: "rocket-chat"
    type: ImageChange
  - type: ConfigChange
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: "mongodb"
spec:
  serviceName: "mongodb-internal"
  replicas: 1
  selector:
    matchLabels:
      name: mongodb
  template:
    metadata:
      labels:
        name: "mongodb"
    spec:
      containers:
        - name: mongo-container
          image: "registry.access.redhat.com/rhscl/mongodb-34-rhel7:latest"
          ports:
            - containerPort: 27017
          args:
            - "run-mongod-replication"
          volumeMounts:
            - name: mongo-data
              mountPath: "/var/lib/mongodb/data"
          env:
            - name: MONGODB_DATABASE
              value: "mongodb"
            - name: MONGODB_USER
              value: "mongodb_user"
            - name: MONGODB_PASSWORD
              value: "mongodb_password"
            - name: MONGODB_ADMIN_PASSWORD
              value: "mongodb_admin_password"
            - name: MONGODB_REPLICA_NAME
              value: "rs0"
            - name: MONGODB_KEYFILE_VALUE
              value: "12345678901234567890"
            - name: MONGODB_SERVICE_NAME
              value: "mongodb-internal"
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
        labels:
          name: "mongodb"
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "thin"
        resources:
          requests:
            storage: "2Gi"
